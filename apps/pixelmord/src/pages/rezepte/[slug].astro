---
import { type CollectionEntry, getCollection } from "astro:content";
import PostPreview from "@/components/PostPreview.astro";
import RecipePreview from "@/components/RecipePreview.astro";
import Subscribe from "@/components/Subscribe.astro";
import BaseLayout from "@/layouts/Layout.astro";
import { slugify } from "@/utils/common-utils";
import { sortItemsByDateDesc } from "@/utils/data-utils";
import Button from "@composable/astro-ui/components/Button";
import FormattedDate from "@composable/astro-ui/components/FormattedDate";

export async function getStaticPaths() {
  const posts = (await getCollection("recipes")).sort(sortItemsByDateDesc);
  const postCount = posts.length;
  return posts.map((post, index) => ({
    params: { slug: post.id },
    props: {
      post,
      prevPost: index + 1 !== postCount ? posts[index + 1] : null,
      nextPost: index !== 0 ? posts[index - 1] : null,
    },
  }));
}

type Props = {
  post: CollectionEntry<"recipes">;
  prevPost: CollectionEntry<"recipes">;
  nextPost: CollectionEntry<"recipes">;
};

const { href } = Astro.url;
const { post, prevPost, nextPost } = Astro.props;
const { name, datePublished, image, description } = post.data;
---

<BaseLayout title={name} description={description} ogImage={image && image.length > 0 ? {src: image[0], alt: name} : undefined} pageType="article" showHeader={false}>
    <article class="mb-16 sm:mb-24">
        <header class="mb-8">
            <h1 class="text-3xl leading-tight font-serif font-medium sm:text-5xl sm:leading-tight">{name}</h1>
            <div class="mt-4 text-sm">
                {!!datePublished && <FormattedDate date={datePublished} />}
            </div>
        </header>
        <div class="max-w-none prose prose-dante sm:prose-lg">

        </div>
        <div class="mt-8 flex flex-wrap items-center gap-6 text-sm justify-between sm:mt-12 sm:text-base">
            <Button class="copy-url-button" aria-label="Copy link" data-url={href} data-tooltip-default="Copy link" data-tooltip-success="Copied">Share</Button>
        </div>
    </article>
    {
        (prevPost || nextPost) && (
            <div class="my-16 sm:my-24">
                <h2 class="mb-12 text-xl font-serif italic sm:mb-16 sm:text-2xl">Read Next</h2>
                {nextPost && <RecipePreview post={nextPost} class="mb-10 sm:mb-12" headingLevel="h3" />}
                {prevPost && <RecipePreview post={prevPost} class="mb-10 sm:mb-12" headingLevel="h3" />}
            </div>
        )
    }
    <Subscribe class="my-16 sm:my-24" />
</BaseLayout>

<script>
    document.addEventListener('astro:page-load', () => {
        const copyUrlButton = document.querySelector('.copy-url-button') as HTMLButtonElement;
        copyUrlButton?.addEventListener('click', async () => {
            await copyUrl(copyUrlButton);
        });

        async function copyUrl(button: HTMLButtonElement) {
            let url = button.getAttribute('data-url') || '';
            let label = button.innerText;

            await navigator.clipboard.writeText(url);

            button.innerText = 'Copied';

            setTimeout(() => {
                button.innerText = label;
            }, 2500);
        }
    });
</script>
